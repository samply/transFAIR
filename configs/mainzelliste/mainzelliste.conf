dist = Test-TTP based on Mainzelliste

# Database setup, variables from docker environment are used
db.driver = ML_DB_DRIVER
db.url = jdbc:ML_DB_TYPE://ML_DB_HOST:ML_DB_PORT/ML_DB_NAME
db.username = ML_DB_USER
db.password = ML_DB_PASS

# Logging, defaults to level warn
log.level = ML_LOG_LEVEL

# These fields are supported for storage in this mainzelliste instance:
field.vorname.type = PlainTextField
field.nachname.type = PlainTextField
field.geburtsname.type = PlainTextField
field.geburtstag.type = IntegerField
field.geburtsmonat.type = IntegerField
field.geburtsjahr.type = IntegerField
field.plz.type = PlainTextField
field.ort.type = PlainTextField

# Enable and configure the FHIR Rest API
experimental.fhir.enable = true
fhir.map.vorname = Patient.name.given
fhir.map.nachname = Patient.name.where(use = 'official').family
fhir.map.geburtsname = Patient.name.where(use = 'maiden').family
# see validator.date.0 for reference, this mapping retrieves all fields defined there and formats into ISO-8601
fhir.map.date.0 = Patient.birthDate

# require the following input fields before inserting a patient to the database
validator.field.vorname.required = true
validator.field.nachname.required = true
validator.field.geburtstag.required = true
validator.field.geburtsmonat.required = true
validator.field.geburtsjahr.required = true

# Validates names with a list of common european letters
validator.field.vorname.format = ^[A-Za-zäÄöÖüÜßáÁéÉèÈ\\.\\- ]*[A-Za-zäÄöÖüÜßáÁéÉèÈ]+[A-Za-zäÄöÖüÜßáÁéÉèÈ\\.\\- ]*$
validator.field.nachname.format = ^[A-Za-zäÄöÖüÜßáÁéÉèÈ\\.\\- ]*[A-Za-zäÄöÖüÜßáÁéÉèÈ]+[A-Za-zäÄöÖüÜßáÁéÉèÈ\\.\\- ]*$
validator.field.geburtsname.format = ^[A-Za-zäÄöÖüÜßáÁéÉèÈ\\.\\- ]*[A-Za-zäÄöÖüÜßáÁéÉèÈ]+[A-Za-zäÄöÖüÜßáÁéÉèÈ\\.\\- ]*$

# Validates the Date
validator.date.0.fields = geburtstag, geburtsmonat, geburtsjahr
validator.date.0.format = ddMMyyyy



## Record Linkage

# On Record Linkage the Mainzelliste will evaluate the score of all combinations
# to check if the e.g. one field was accidentially exchanged with another
exchangeGroup.0 = vorname, nachname, geburtsname

# For Storage and Record Linkage, Mainzelliste will replace some special characters with their sounding equivalent
# The default map is : {"ä":"ae", "Ä":"AE", "ö":"oe", "Ö":"OE", "ü":"ue", "Ü":"UE", "ß":"ss", "á":"a", "Á":"A", "é":"e", "É":"E", "è":"e", "È":"E"}
field.vorname.transformers = StringNormalizer, FirstNameDecomposer
field.nachname.transformers = StringNormalizer, GermanLastNameDecomposer
field.geburtsname.transformers = StringNormalizer, GermanLastNameDecomposer

# field comparators
field.vorname.comparator = NGramComparator
field.nachname.comparator = NGramComparator
field.geburtsname.comparator = NGramComparator

field.geburtstag.comparator = BinaryFieldComparator
field.geburtsmonat.comparator = BinaryFieldComparator
field.geburtsjahr.comparator = BinaryFieldComparator

field.plz.comparator = BinaryFieldComparator
field.ort.comparator = NGramComparator

##  Blocking
# To speed up comparison and record linkage, mainzelliste will remove patients from the record linkage selection based on their soundex
blocking.soundex.type = Soundex
blocking.soundex.fields = vorname, nachname, geburtsname

# ! EXPERIMENTAL FEATURE ! configuration is subject to change in a future release. A migration guideline will be provided
# Record Linkage
# exclude input fields from record linkage
enableFieldRecordLinkage = true

# Matcher definition
matcher = EpilinkMatcher

# Parameters for Scoring in the Epilink Algorithm
matcher.epilink.vorname.frequency = 0.000235
matcher.epilink.nachname.frequency = 0.0000271
matcher.epilink.geburtsname.frequency = 0.0000271

# 1 / 30 (approximate average number of days in a month)
matcher.epilink.geburtstag.frequency = 0.0333
# 1 / 12
matcher.epilink.geburtsmonat.frequency = 0.0833
# example value: birth years for an age range of 35 years (40 - 75).
matcher.epilink.geburtsjahr.frequency = 0.0286

matcher.epilink.plz.frequency = 0.01
matcher.epilink.ort.frequency = 0.01
matcher.epilink.geburtsdatum.frequency = 0.00007

# The supplied number stem from the evaluation of a German cancer registry
matcher.epilink.vorname.errorRate = 0.01
matcher.epilink.nachname.errorRate = 0.008
matcher.epilink.geburtsname.errorRate = 0.008
matcher.epilink.geburtstag.errorRate = 0.005
matcher.epilink.geburtsmonat.errorRate = 0.002
matcher.epilink.geburtsjahr.errorRate = 0.004
matcher.epilink.plz.errorRate = 0.04
matcher.epilink.ort.errorRate = 0.04
matcher.epilink.geburtsdatum.errorRate = 0.005

# Minimal threshold for score, to decide if two data sets are a match
matcher.epilink.threshold_match = 0.95
# Maximum threshold for score, to decide if two data sets are not a match
matcher.epilink.threshold_non_match = 0.6
# All datasets with a score x, with 0.6 < x < 0.95 will be marked as tentative matches, meaning it is unsure if they are the same person.

## ID-Generators
# all idgenerators supported by this instance should be listed here
idgenerators = INTERNAL_ID, DIZ_ID, PROJECT_1_ID, SESSION_ID

# Main ID inside the TTP
idgenerator.INTERNAL_ID = PIDGenerator
idgenerator.INTERNAL_ID.k1 = 1
idgenerator.INTERNAL_ID.k2 = 2
idgenerator.INTERNAL_ID.k3 = 3
# This will always be generated, even if the identifier is not
idgenerator.INTERNAL_ID.eager = *

# ID for Communication with the Dataintegrationcenter
idgenerator.DIZ_ID = PIDGenerator
idgenerator.DIZ_ID.k1 = 4
idgenerator.DIZ_ID.k2 = 5
idgenerator.DIZ_ID.k3 = 6

# ID for a specific Project
idgenerator.PROJECT_1_ID = PIDGenerator
idgenerator.PROJECT_1_ID.k1 = 10
idgenerator.PROJECT_1_ID.k2 = 11
idgenerator.PROJECT_1_ID.k3 = 12


# A Number used for interactions between DIZ and Routine Connector
idgenerator.SESSION_ID = SimpleIDGenerator

## Server Permissions
extendedPermissionCheck = true
# ApiKey used by the Routine Connector
servers.0.apiKey = ML_ROUTINE_CONNECTOR_PASSPHRASE
servers.0.permissions = createSession;showSessionIds;createToken;tt_addPatient;tt_readPatients;tt_editPatient;;fhir_read;fhir_update;fhir_create;fhir_delete;fhir_search
servers.0.allowedRemoteAdresses = ML_ALLOWEDREMOTEADDRESSES

# ApiKey used by the Dataintegrationcenter
servers.1.apiKey = ML_DIZ_PASSPHRASE
servers.1.permissions = createSession;showSessionIds;createToken;tt_addPatient;tt_readPatients;tt_editPatient;;fhir_read;fhir_update;fhir_create;fhir_delete;fhir_search
servers.1.allowedRemoteAdresses = ML_ALLOWEDREMOTEADDRESSES

## Proxy Configuration
# This is only needed then running the Mainzelliste behind the proxy and using one of the following features: Callbacks, Subconfigurations
# proxy.http.host=proxy
# proxy.http.port=3128
# proxy.http.username=foo
# proxy.http.password=changeme
# proxy.https.host=proxy
# proxy.https.port=3128
# proxy.https.username=foo
# proxy.https.password=changeme
## To deactivate the proxy for private ip addresses as defined in RFC1918 set this to true:
# proxy.bypass.private.networks=false
